#Ćwiczenia 1
mkdir ~/GEiP
conda activate GEiP
mkdir Lab1
cd Lab1
seqkit grep -p "scaffold2" /home/mkonczal/Teaching/GEiP/Data/Reference/SBS_final.scaffolds.fasta > scaffold2.fasta
samtools faidx scaffold2.fasta
cut -f 2 scaffold2.fasta.fai

wynik:10659794

cp /home/mkonczal/Teaching/GEiP/Data/Fastq/SRR7054135/* .
cp /home/mkonczal/Teaching/GEiP/Data/Fastq/SRR7054162/* .
cp /home/mkonczal/Teaching/GEiP/Data/Fastq/SRR7054133/* .
cp /home/mkonczal/Teaching/GEiP/Data/Fastq/SRR7054147/* .

fastqc SRR7054135_pass_1.fastq.gz SRR7054135_pass_2.fastq.gz
fastqc SRR7054162_pass_1.fastq.gz SRR7054162_pass_2.fastq.gz
fastqc SRR7054133_pass_1.fastq.gz SRR7054133_pass_2.fastq.gz
fastqc SRR7054147_pass_1.fastq.gz SRR7054147_pass_2.fastq.gz

-------------------------
Read1 before filtering:
total reads: 29711016
total bases: 3713877000
Q20 bases: 3425908090(92.2461%)
Q30 bases: 3180728297(85.6444%)

Read1 after filtering:
total reads: 29480224
total bases: 3642959840
Q20 bases: 3376487897(92.6853%)
Q30 bases: 3143631476(86.2933%)

Read2 before filtering:
total reads: 29711016
total bases: 3713877000
Q20 bases: 3509810058(94.5053%)
Q30 bases: 3306199560(89.0229%)

Read2 aftering filtering:
total reads: 29480224
total bases: 3642959840
Q20 bases: 3454721388(94.8328%)
Q30 bases: 3262036292(89.5436%)

Filtering result:
reads passed filter: 58960448
reads failed due to low quality: 187872
reads failed due to too many N: 273712
reads failed due to too short: 0
reads with adapter trimmed: 2493470
bases trimmed due to adapters: 84137590

Duplication rate: 2.52885%

Insert size peak (evaluated by paired-end reads): 180

JSON report: fastp.json
HTML report: fastp.html

fastp -i SRR7054135_pass_1.fastq.gz -I SRR7054135_pass_2.fastq.gz -o SRR7054135_filtered_1.fastq.gz -O SRR705
fastp v0.19.5, time used: 269 seconds
Read1 before filtering:
total reads: 39298468
total bases: 4912308500
Q20 bases: 4530394008(92.2254%)
Q30 bases: 4221264279(85.9324%)

Read1 after filtering:
total reads: 38979174
total bases: 4815628258
Q20 bases: 4467892749(92.779%)
Q30 bases: 4175739506(86.7122%)

Read2 before filtering:
total reads: 39298468
total bases: 4912308500
Q20 bases: 4676462923(95.1989%)
Q30 bases: 4456931040(90.7299%)

Read2 aftering filtering:
total reads: 38979174
total bases: 4815628258
Q20 bases: 4604168665(95.6089%)
Q30 bases: 4398081215(91.3293%)

Filtering result:
reads passed filter: 77958348
reads failed due to low quality: 403442
reads failed due to too many N: 235146
reads failed due to too short: 0
reads with adapter trimmed: 3406888
bases trimmed due to adapters: 113537780

Duplication rate: 2.98251%

Insert size peak (evaluated by paired-end reads): 189

JSON report: fastp.json
HTML report: fastp.html

fastp -i SRR7054162_pass_1.fastq.gz -I SRR7054162_pass_2.fastq.gz -o SRR7054162_filtered_1.fastq.gz -O SRR7054162_filtered_2.fastq.gz
fastp v0.19.5, time used: 311 seconds

-------------------------

bwa index scaffold2.fasta

screen -S SRR7054162_mapping bwa mem -t 10 -R '@RG\tID:SRR7054162\tSM:C_ruf_09\tLB:SRR7054162\tPL:ILLUMINA\tPU:lib2_unit' scaffold2.fasta SRR7054162_filtered_1.fastq.gz SRR7054162_filtered_2.fastq.gz | samtools view -Sb -F 4 -o SRR7054162.Mapped.bam
screen -S SRR7054133_mapping bwa mem -t 10 -R '@RG\tID:SRR7054133\tSM:C_pyg_26\tLB:SRR7054133\tPL:ILLUMINA\tPU:lib1_unit' scaffold2.fasta SRR7054133_filtered_1.fastq.gz SRR7054133_filtered_2.fastq.gz | samtools view -Sb -F 4 -o SRR7054133.Mapped.bam
screen -S SRR7054147_mapping bwa mem -t 10 -R '@RG\tID:SRR7054147\tSM:C_pyg_26\tLB:SRR7054147\tPL:ILLUMINA\tPU:lib2_unit' scaffold2.fasta SRR7054147_filtered_1.fastq.gz SRR7054147_filtered_2.fastq.gz | samtools view -Sb -F 4 -o SRR7054147.Mapped.bam
screen -S SRR7054162_mapping bwa mem -t 10 -R '@RG\tID:SRR7054162\tSM:C_ruf_09\tLB:SRR7054162\tPL:ILLUMINA\tPU:lib2_unit' scaffold2.fasta SRR7054162_filtered_1.fastq.gz SRR7054162_filtered_2.fastq.gz | samtools view -Sb -F 4 -o SRR7054162.Mapped.bam
screen -S SRR7054133_mapping bwa mem -t 10 -R '@RG\tID:SRR7054133\tSM:C_pyg_26\tLB:SRR7054133\tPL:ILLUMINA\tPU:lib1_unit' scaffold2.fasta SRR7054133_filtered_1.fastq.gz SRR7054133_filtered_2.fastq.gz | samtools view -Sb -F 4 -o SRR7054133.Mapped.bam
bwa mem -t 10 -R '@RG\tID:SRR7054147\tSM:C_pyg_26\tLB:SRR7054147\tPL:ILLUMINA\tPU:lib2_unit' scaffold2.fasta SRR7054147_filtered_1.fastq.gz SRR7054147_filtered_2.fastq.gz | samtools view -Sb -F 4 -o SRR7054147.Mapped.bam
bwa mem -t 10 -R '@RG\tID:SRR7054133\tSM:C_pyg_26\tLB:SRR7054133\tPL:ILLUMINA\tPU:lib1_unit' scaffold2.fasta SRR7054133_filtered_1.fastq.gz SRR7054133_filtered_2.fastq.gz | samtools view -Sb -F 4 -o SRR7054133.Mapped.bam
bwa mem -t 10 -R '@RG\tID:SRR7054162\tSM:C_ruf_09\tLB:SRR7054162\tPL:ILLUMINA\tPU:lib2_unit' scaffold2.fasta SRR7054162_filtered_1.fastq.gz SRR7054162_filtered_2.fastq.gz | samtools view -Sb -F 4 -o SRR7054162.Mapped.bam
bwa mem -t 10 -R '@RG\tID:SRR7054135\tSM:C_ruf_09\tLB:SRR7054135\tPL:ILLUMINA\tPU:lib1_unit' scaffold2.fasta SRR7054135_filtered_1.fastq.gz SRR7054135_filtered_2.fastq.gz | samtools view -Sb -F 4 -o SRR7054135.Mapped.bam
screen -S SRR7054135_mapping bwa mem -t 10 -R '@RG\tID:SRR7054135\tSM:C_ruf_09\tLB:SRR7054135\tPL:ILLUMINA\tPU:lib1_unit' scaffold2.fasta SRR7054135_filtered_1.fastq.gz SRR7054135_filtered_2.fastq.gz | samtools view -Sb -F 4 -o SRR7054135.Mapped.bam 2> SRR7054135_mapping.log

--------------------------
parametr -R: dodaje info. o grupach odczytów, np. identyfikator próbki i biblioteki.

--------------------------

picard MarkDuplicates REMOVE_DUPLICATES=true REMOVE_SEQUENCING_DUPLICATES=true I=SRR7054135.Mapped.sorted.bam O=SRR7054135.Mapped.sorted_DupRmv.bam M=metrics_SRR7054135.txt 2> log_SRR7054135_markduplicates.txt
picard MarkDuplicates REMOVE_DUPLICATES=true REMOVE_SEQUENCING_DUPLICATES=true I=SRR7054162.Mapped.sorted.bam O=SRR7054162.Mapped.sorted_DupRmv.bam M=metrics_SRR7054162.txt 2> log_SRR7054162_markduplicates.txt
picard MarkDuplicates REMOVE_DUPLICATES=true REMOVE_SEQUENCING_DUPLICATES=true I=SRR7054133.Mapped.sorted.bam O=SRR7054133.Mapped.sorted_DupRmv.bam M=metrics_SRR7054133.txt 2> log_SRR7054133_markduplicates.txt
picard MarkDuplicates REMOVE_DUPLICATES=true REMOVE_SEQUENCING_DUPLICATES=true I=SRR7054147.Mapped.sorted.bam O=SRR7054147.Mapped.sorted_DupRmv.bam M=metrics_SRR7054147.txt 2> log_SRR7054147_markduplicates.txt

samtools index SRR7054135.Mapped.sorted_DupRmv.bam
samtools index SRR7054162.Mapped.sorted_DupRmv.bam
samtools index SRR7054133.Mapped.sorted_DupRmv.bam
samtools index SRR7054147.Mapped.sorted_DupRmv.bam

samtools merge -r C_ruf_09.bam SRR7054135.Mapped.sorted_DupRmv.bam SRR7054162.Mapped.sorted_DupRmv.bam
samtools merge -r C_pyg_26.bam SRR7054133.Mapped.sorted_DupRmv.bam SRR7054147.Mapped.sorted_DupRmv.bam

samtools index C_ruf_09.bam
samtools index C_pyg_26.bam

#Ćwiczenia 2
mkdir Lab2 && cd Lab2

conda activate GEiP

mkdir scaffold2 && cd scaffold2

faToTwoBit ../../Lab1/scaffold2.fasta scaffold2.2bit

twoBitInfo scaffold2.2bit sizes.tab
cd ..

ln -s /home/mkonczal/Teaching/GEiP/Data/UCE-probes/uce-5k-probes.fasta .

samtools faidx uce-5k-probes.fasta
bwa index uce-5k-probes.fasta
UCEprobe=/home/mkonczal/Lab2/uce-5k-probes.fasta

phyluce_probe_run_multiple_lastzs_sqlite --db scaffold2.sqlite \
--output scaffold2-genome-lastz \
--scaffoldlist scaffold2 \
--genome-base-path ./ \
--probefile ${UCEprobe} \
--cores 10

phyluce_probe_slice_sequence_from_genomes --lastz scaffold2-genome-lastz --flank 1000 --output OUT --conf scaffold2.conf --name-pattern uce-5k-probes.fasta_v_scaffold2.lastz.clean

mkdir UCE_regions


grep "uce" scaffold2.fasta | cut -d '|' -f 2,3,4,6 | sed -e 's/|/\t/g' |
sed -e 's/contig://g' | sed -e 's/slice://g'| sed -e 's/uce://g' | sed -e
's/orient://g' | sed -e 's/uce-/uce_/g' | sed -e s/"'"//g | sed -e
's/{+}/forward/g' | sed -e 's/{-}/reverse/g'| sed -e 's/-/\t/g' >
../UCE_regions/scaffold2_UCE_regions.txt

mkdir UCE_regions/forward
mkdir UCE_regions/reverse

grep 'forward' UCE_regions/scaffold2_UCE_regions.txt | cut -f 1,2,3 > UCE_regions/forward/scaffold2_UCE_forward_orient_regions.txt
grep 'reverse' UCE_regions/scaffold2_UCE_regions.txt | cut -f 1,2,3 > UCE_regions/reverse/scaffold2_UCE_reverse_orient_regions.txt

UCE=UCE_regions/forward/scaffold2_UCE_forward_orient_regions.txt
REF=../Lab1/scaffold2.fasta
BAM=../Lab1/C_pyg_26.bam (potem dla drugiego osobnika ruf_09)

samtools mpileup -l ${UCE} -f ${REF} ${BAM} > out.forward.mpileup

bcftools mpileup --threads 10 -Ou -Q 30 -q 30 -C 50 -a AD,DP -R ${UCE} -f ${REF} ${BAM} | bcftools call --threads 10 -c -Ob > out.forward.bcf 


nano bam_list.txt./Lab1/C_ruf_09.bam
./Lab1/C_pyg_26.bam

bcftools mpileup --threads 10 -Ou -Q 30 -q 30 -C 50 -a AD,DP -R ${UCE} -f
${REF} -b bam_list.txt | bcftools call --threads 10 -c -Ob >
out.forward_2samples.bcf
W bcf:
0/0:0:1::1
0/0 -> homozygota, sfazowane 
0/1 -> heterozygota
1/1 -> homozygota alternatywna

0 -> zerowa szansa na polimorfizm


1 -> pokrycie alleli w danym miejscu 

  157640 out.forward_2samples.vcf
  147327 out.forward.vcf (ruf_09)
  145411 out.forward.vcf (pyg_26)

Wynika to z tego, ze:
·	Jeśli wariant występuje tylko u osobnika A, ale nie u B, to wciąż będzie obecny w pliku wspólnym.
·	Jeśli wariant występuje u obu osobników, również zostanie zapisany.


ls -lh out.forward_2samples.bcf out.forward.bcf
-rw-rw-r-- 1 st5 st5 1.7M Jan 17 14:08 out.forward_2samples.bcf
-rw-rw-r-- 1 st5 st5 1.2M Jan 17 14:06 out.forward.bcf

Wiec w out.forward_2samples.bcf  -> 0,85 M na osobnika
W out.forward.bcf -> 1,2M

BCF=out.forward.bcf
bcftools query -f '%QUAL\t%MQ\t%DP\n' ${BCF} > Stats_QualMQDP.txt
bcftools stats ${BCF) > Stats.stat.txt
bcftools view -v snps -e 'QUAL < 30 || MQ < 10 || FORMAT/DP < 4' out.forward.bcf > out.forward.filtered.vcf

#Ćwiczenia 3
2.1
blastn -query ${scaffold} -db ${galgal}/Gallus_gallus.GRCg6a.dna_rm.toplevel.fa -outfmt 6 > Scaffold2Chicken.blastout

cut –f2 Scaffold2Chicken.blastout | sort | uniq –c
CHROMOSOM: 2

2.2
scores=/home/mkonczal/Teaching/GEiP/utilities/HoxD55
hom_chicken_chr=2
lastz ${galgal}/split/${hom_chicken_chr}.fa ${scaffold} --ambiguous=iupac - -hspthresh=2200 --inner=2000 --ydrop=3400 --gappedthresh=10000 -- scores=${scores} --chain --format=axt > bGalGal6_chr${hom_chicken_chr}.axt

2.3
alignment=bGalGal6_chr${hom_chicken_chr}.axt

chicken_2bit=${galgal}/Gallus_gallus.GRCg6a.dna_rm.toplevel.2bit

faToTwoBit scaffold2.fasta scaffold2.2bit
biegus_2bit=scaffold2.2bit

axtChain -minscore=5000 -linearGap=loose $alignment $chicken_2bit $biegus_2bit bgalgalChr${hom_chicken_chr}_scaff2.chain

chainSort bgalgalChr${hom_chicken_chr}_scaff2.chain sorted_bgalgalChr${hom_chicken_chr}_scaff2.chain

grep “chain” sorted_bgalgalChr${hom_chicken_chr}_scaff2.chain | wc -l
1547


2.4
scaffold biegusa: scaffold2.fasta
plik zawierający długość scaffoldu biegusa: scaffold2.chrom.size
chromosom kury: 2.fa
plik zawierający długość chromosomu kury: 2.chrom.size

cat scaffold2.fasta | grep -v '>' | tr -d '\n' | wc -c
10659794
cat 2.fa | grep -v '>' | tr -d '\n' | wc -c
149682049

chainNet sorted_bgalgalChr${hom_chicken_chr}_scaff2.chain 2.chrom.size
scaffold2.chrom.size all.net /dev/null

netChainSubset all.net sorted_bgalgalChr${hom_chicken_chr}_scaff2.chain
galGalChr${hom_chicken_chr}ToSBS_Scaff2.over.chain

grep "chain" galGalChr${hom_chicken_chr}ToSBS_Scaff2.over.chain | wc -l
340

gzip galGalChr${hom_chicken_chr}ToSBS_Scaff2.over.chain

3.1
chCADD_dir=/home/mkonczal/Teaching/GEiP/Data/chCADD-scores


cp ${chCADD_dir}/Header.txt .
cp ${chCADD_dir}/2.txt.gz .
cat Header.txt > chr2_chCADD.tsv
zcat 2.txt.gz >> chr2_chCADD.tsv
3.2
awk '{print $1,$2-1,$2,$3,$4,$5}’ chr2_chCADD.tsv > chr2_chCADD.1based.bed

rm chr2_chCADD.tsv

4.
conda activate crossmap
scaffold=scaffold2

CrossMap bed galGalChr${hom_chicken_chr}ToSBS_Scaff2.over.chain.gz
chCADD_chr/chr${hom_chicken_chr}_chCADD.1based.bed | head 

CrossMap bed galGalChr${hom_chicken_chr}ToSBS_Scaff2.over.chain.gz
chCADD/chr${hom_chicken_chr}_chCADD.1based.bed | grep $scaffold | grep -v
„Unmap“ | cut -f 3,4,5,6,7,8 > chr${hom_chicken_chr}-SBS_CADD.bed


rm chCADD/*


#Cwiczenia 4
VCF1_f=../../Lab2/C_pyg_26/out.forward_C_pyg_26_filtered.vcf  VCF2_f=../../Lab2/C_ruf_09/out.reverse_C_09_filtered.vcf

5.
W C_pyg_26
vcf2bed --max-mem 4G < ${VCF1_f} > vcf_C_pyg_26_forward.bed
W C_ruf_09
vcf2bed --max-mem 4G < ${VCF2_f} > vcf_C_ruf_09_forward.bed

6.
grep -v "INDEL" vcf_C_pyg_26_forward.bed > vcf_C_pyg_26_forward_indelRm.bed
7.
CADD=../../Lab3/chr2-SBS_CADD.bed bed=vcf_C_pyg_26_forward_indelRm.bed

bedtools intersect -a $CADD -b $bed -wa -wb > vcf_C_pyg_26_forward_indelRm_intersect.bed
8.
script_path=/home/mkonczal/Teaching/GEiP/scripts 
awk -v b=6 -v e=100 -f ${script_path}/SNP_check_forward.awk vcf_C_pyg_26_forward_indelRm_intersect.bed > vcf_C_pyg_26_forward_indelRm_intersect_annotated.bed

9.
cut -f 23 vcf_C_pyg_26_forward_indelRm_intersect_annotated.bed | sort | uniq -c

11.
awk '$22 == "SNP_is_ALT_pp=ref"' vcf_C_pyg_26_forward_indelRm_intersect_annotated.bed > vcf_C_pyg_26_forward_indelRm_intersect_annotated_SNP_is_alt.bed

awk -e ' $20 ~ /^0\/0/ ' vcf_C_pyg_26_forward_indelRm_intersect_annotated_SNP_is_alt.bed | cut -f 6 | paste -sd+ - | bc

awk -e ' $20 ~ /^0\/1/ ' vcf_C_pyg_26_forward_indelRm_intersect_annotated_SNP_is_alt.bed | cut -f 6 | paste -sd+ - | bc

awk -e ' $20 ~ /^1\/1/ ' C_pyg_26_forward_indelRm_intersect_annotated_SNP_is_alt.bed | cut -f 6 | paste -sd+ - | bc


DLA RUF_09
grep -v "INDEL" vcf_C_ruf_09_forward.bed > vcf_C_ruf_09_forward_indelRm.bed
7.
CADD=../../Lab3/chr2-SBS_CADD.bed bed=vcf_C_ruf_09_forward_indelRm.bed

bedtools intersect -a $CADD -b $bed -wa -wb > vcf_C_ruf_09_forward_indelRm_intersect.bed
8.
script_path=/home/mkonczal/Teaching/GEiP/scripts 
awk -v b=6 -v e=100 -f ${script_path}/SNP_check_forward.awk vcf_C_ruf_09_forward_indelRm_intersect.bed > vcf_C_ruf_09_forward_indelRm_intersect_annotated.bed

9.
cut -f 23 vcf_C_ruf_09_forward_indelRm_intersect_annotated.bed | sort | uniq -c

11.
awk '$22 == "SNP_is_ALT_pp=ref"' 
vcf_C_ruf_09_forward_indelRm_intersect_annotated.bed > vcf_C_ruf_09_forward_indelRm_intersect_annotated_SNP_is_alt.bed

awk -e ' $20 ~ /^0\/0/ ' vcf_C_ruf_09_forward_indelRm_intersect_annotated_SNP_is_alt.bed | cut -f 6 | paste -sd+ - | bc

awk -e ' $20 ~ /^0\/1/ ' vcf_C_ruf_09_forward_indelRm_intersect_annotated_SNP_is_alt.bed | cut -f 6 | paste -sd+ - | bc

awk -e ' $20 ~ /^1\/1/ ' vcf_C_ruf_09_forward_indelRm_intersect_annotated_SNP_is_alt.bed | cut -f 6 | paste -sd+ - | bc

PYTANIA:1. Ile warinatów zidentyfikowano w genomie każdego z dwóch gatunków?
PYG_26: 61
RUF_09: 276

2. Ile homozygot i heterozygot zidetyfikowano? 
PYG_26:
Homo: awk -e ' $20 ~ /^1\/1/ ' vcf_C_pyg_26_forward_indelRm_intersect_annotated_SNP_is_alt.bed | wc -l
20
Hetero: awk -e ' $20 ~ /^0\/1/ ' vcf_C_pyg_26_forward_indelRm_intersect_annotated_SNP_is_alt.bed | wc -l
41

RUF_09:
Homo: awk -e ' $20 ~ /^1\/1/ ' vcf_C_ruf_09_forward_indelRm_intersect_annotated_SNP_is_alt.bed | wc -l
172
Hetero: awk -e ' $20 ~ /^0\/1/ ' vcf_C_ruf_09_forward_indelRm_intersect_annotated_SNP_is_alt.bed | wc -l
104
